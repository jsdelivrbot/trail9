{
  "children-cards":  [
    {
      "link": "/apollo/experiences/changing-data",
      "img-src": "https://source.unsplash.com/random/800x501",
      "headline": "Changing Data",
      "watermark": "01",
      "summary": "Maintaining balance and focus in data-heavy interfaces."
    },
    {
      "link": "/apollo/experiences/destroying",
      "img-src": "https://source.unsplash.com/random/801x500",
      "headline": "Destroying Data",
      "watermark": "02",
      "summary": "Making data safe for the user."
    },
    {
      "link": "/apollo/experiences/empty-states",
      "img-src": "https://source.unsplash.com/random/800x499",
      "headline": "Empty States",
      "watermark": "03",
      "summary": "Giving the user something to do."
    },
    {
      "link": "/apollo/experiences/first-use",
      "img-src": "https://source.unsplash.com/random/799x500",
      "headline": "First Use Experience",
      "watermark": "04",
      "summary": "Creating a great first impression."
    },
    {
      "link": "/apollo/experiences/errors",
      "img-src": "https://source.unsplash.com/random/799x501",
      "headline": "Handling Errors",
      "watermark": "05",
      "summary": "Alerting the user without being dramatic."
    }
  ],
  "left-panel":
    {
      "bgImg": "https://source.unsplash.com/random/1200x4800",
      "bgImgAlt": "Random UnSplash Img",
      "headerLink": "/apollo",
      "siteSection": "The Design of Apollo",
      "pageTitle": "Experience Models",
      "pageSummary": "The generalized guidelines for universal design problems, that define the Apollo user experience.",
      "prevLink": "/apollo/mechanics",
      "prevPage": "Mechanics",
      "nextLink": "./changing-data",
      "nextPage": "Changing Data"
    },
  "subsection-header":
    {
      "watermark": "01d",
      "headline": "Experience Models",
      "tagline" : "The Apollo approach to designing a user experience",
      "summary": "When we imagine a user interface, we tend to think about it in an idealized state, where the user engages with the interface in normal day-to-day operations. With excellent design, consistent interface components, and established patterns, this idealized state can work well. But there are other states, and other user experiences, to consider: the first time a user encounters the interface (first-use experience); when there is no data to show on the interface (empty state); when there’s a problem, either from a system failure, or because the user made a mistake (error state); when the interface is ready to show, but not yet ready to use (loading state); and several others. These experiences are universal; users encounter them regardless of the product or service they are interacting with. IBM describes these scenarios as “opportunities to solve unmet needs and emotionally bond users to products.”",
      "img": "https://source.unsplash.com/random/750x230",
      "imgAlt": "Random Unsplash.it Img"
    },
  "section-content-1":
    {
      "header": "Designing User Experiences with Apollo",
      "summary":
        "<p>Components, patterns, and experience models are complementary concepts, and each plays a role in crafting a great user experience. Components are reusable, platform-specific interface elements, such as a list box, label, button, or menu bar. Patterns are specific guidelines for the best use of those components. Experience models are more generalized guidelines for universal design problems, such as reporting errors, handling an empty list, or first-use experience.</p>
        <p>Components are made up of code and visual elements. To use a component, you include the platform-appropriate Apollo component library in your project. Relying on the Apollo component libraries creates a more consistent user experience across platforms and products.</p>
        <p>Patterns are best practices for the use of components: when to use one component instead of another, and how to create consistent seamless interactions between components.</p>
        <p>Experience models exist as guidelines and definitions of expected behavior. Because they are solutions to universal design problems, you need to understand where those design problems occur in each application; the experience model tells you what to do about them.</p>
        <p>For example, if the user must select from a finite set of choices, the application might use the list box component. To optimize that experience, the designer should make sure that the elements of the input prompts follow a pattern. And while designing that interface, you might also invoke the empty list experience model to handle cases where there is no data available to populate the list box.</p>
        <p>Diligent application of patterns and experience models is another way to create a more consistent user experience across platforms and products."
    },
  "section-content-2":
    {
      "header": "Model Attributes",
      "summary":
        "<p>Apollo experience models embody the following principles:</p>
        <ul>
          <li>
            Safe: minimizes the likelihood and adverse consequences of accidental or unintended actions.
          </li>
          <li>
            Simple: convenient and intuitive, regardless of the user's experience or current concentration level.
          </li>
          <li>
            Generic: not application-specific, usable in a variety of contexts.
          </li>
          <li>
            Context-Aware: accounts for differences between platforms, application workflows, and the wide range of individual preferences and abilities.
          </li>
          <li>
            Reinforcing: all prompting and feedback uses tone and messaging that encourages the desired behavior.
          </li>
          <li>
            On-brand: all interactions are consistent with the IMS Health brand.
          </li>
          <li>
            Adaptable: provides enough guidance for a consistent user experience across a wide variety of use cases, including unforeseen use cases.
          </li>
          <li>
            Accessible: enable users to engage the pattern without the need for adaptation or specialized design when possible, and always in a way compatible with adaptive or assistive technologies.
          </li>
        </ul>"
    }
}
